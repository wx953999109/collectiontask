spring:
  datasource:
    url: "jdbc:mysql://localhost:3306/collectiontask?user=root&password=root&useUnicode=true&characterEncoding=utf8&autoReconnect=true&failOverReadOnly=false"
  main:
    banner-mode: off
  thymeleaf:
    cache: false
    mode: HTML5
    encoding: UTF-8
    servlet:
      content-type: text/html
  quartz:
  job-store-type: jdbc
  # 是否等待任务执行完毕后，容器才会关闭
  wait-for-jobs-to-complete-on-shutdown: true
  scheduler-name: SpringBootScheduler
  properties:
    org:
      quartz:
        threadPool:
          # 线程数量
          threadCount: 5
          # 线程优先级
          threadPriority: 5
          # 线程池中线程名称的前缀
          threadNamePrefix: test-thread
          # 加载任务代码的ClassLoader是否从外部继承
          threadsInheritContextClassLoaderOfInitializingThread: true
        jobStore:
          # 最大能忍受的触发超时时间，如果超时则认为“失误”
          misfireThreshold: 5000
          # 选择JDBC的存储方式
          class: org.quartz.impl.jdbcjobstore.JobStoreTX
          # 类似于Hibernate的dialect，用于处理DB之间的差异，StdJDBCDelegate能满足大部分的DB（授权）
          driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
          # 在调度流程的第一步，也就是拉取待即将触发的triggers时，是上锁的状态，即不会同时存在多个线程拉取到相同的trigger的情况，也就避免的重复调度的危险。参考：https://segmentfault.com/a/1190000015492260
          acquireTriggersWithinLock: true
server:
  port: 9002